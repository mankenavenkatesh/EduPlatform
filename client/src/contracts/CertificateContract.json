{
  "contractName": "CertificateContract",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a72305820ba0b463a4c84ef74530d9d2cccfbc232f7a786f59afa34761aa68e8978a22ee80029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a72305820ba0b463a4c84ef74530d9d2cccfbc232f7a786f59afa34761aa68e8978a22ee80029",
  "sourceMap": "25:808:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:808:0;;;;;;;",
  "deployedSourceMap": "25:808:0:-;;;;;",
  "source": "pragma solidity ^0.5.0;\n\ncontract CertificateContract {\n/*struct cert {\n    uint256 certId;\n    address issuerAddress;\n    address recipientAddress;\n    string certContent;\n}\n\nenum CertificateStages {\n        AcceptingCertificateRequest,\n        RequestCertificate,\n        VerifyProfile,\n        IssueCertificate,\n        acceptCertificate\n}\n    \nmapping (uint256 => cert) certificates;\nmapping (address => uint256) certificatesByIssuer;\nmapping (address => uint256) certificatesByRecipient;\n\n// issue certificate only to registered students in a particular college\n function issueCertificate() public \n {\n        \n }\n \n // can be called by student of partical college\n fuction requestCertification(address collegeAddress) public{\n     \n }\n\n// can be accepted by student\nfunction acceptCertificate(uint256 certId) {\n    \n}    */ \n\n}\n",
  "sourcePath": "/Users/mani/Edu/gitRepo/EduPlatform/contracts/CertificateContract.sol",
  "ast": {
    "absolutePath": "/Users/mani/Edu/gitRepo/EduPlatform/contracts/CertificateContract.sol",
    "exportedSymbols": {
      "CertificateContract": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "CertificateContract",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "25:808:0"
      }
    ],
    "src": "0:834:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/mani/Edu/gitRepo/EduPlatform/contracts/CertificateContract.sol",
    "exportedSymbols": {
      "CertificateContract": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "CertificateContract",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "25:808:0"
      }
    ],
    "src": "0:834:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-17T10:36:42.717Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}